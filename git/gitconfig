[core]
	pager = delta
[interactive]
	diffFilter = delta --color-only
[delta]
    features = decorations
	# side-by-side = true
	tabs = 4
	navigate = true
	syntax-theme = dimmed-monokai
	# TODO: vscode protocol file links?
[delta "decorations"]
    commit-style = raw
    file-style = blue bold
    hunk-header-decoration-style = omit
    hunk-header-file-style = blue
    hunk-header-line-number-style = dim blue
    hunk-header-style = file line-number syntax
	# delta color procedure:
	# Find initial colors by adding default red/green delta colors (#012800 and #340001) to terminal background color
	# This is done via simple RGB addition
	# The result is used for the emphasis color
	# Darken Value channel by 12 to get ordinary color
	plus-non-emph-style = syntax "#112611"
	plus-style = syntax "#1f461e"
	plus-emph-style = syntax "#1f461e"
	minus-non-emph-style = syntax "#331313"
	minus-style = syntax "#521e1f"
	minus-emph-style = syntax "#521e1f"
[diff]
    colorMoved = default
[rerere]
	enabled = true
[user]
	name = Josh Hejna
	email = josh.hejna@gmail.com
[credential]
	helper = cache --timeout=1800
[push]
	default = nothing
[alias]
	lg = !"git lg1"
	lg1 = !"git lg1-specific --all"
	lg2 = !"git lg2-specific --all"
	lg3 = !"git lg3-specific --all"
	lgstat = !"git lgstat-specific --all"
	lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
	lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
	lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
	lgstat-specific = log --numstat --abbrev-commit --decorate --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'

	diffc = !"git diff --word-diff=color"
	diffp = !"git diff --word-diff=plain"

	co = checkout
	ec = config --global -e
	ca = commit --amend
	up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	cob = checkout -b
	cm = !git add -A && git commit -m
	save = !git add -A && git commit -m 'SAVEPOINT'
	wip = !git add -u && git commit -m 'WIP'
	undo = reset HEAD~1 --mixed
	amend = commit -a --amend
	hard = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
	s = status

	brt = "!git for-each-ref refs/heads --color=always --sort -committerdate --format='%(HEAD)%(color:reset);%(color:yellow)%(refname:short)%(color:reset);%(contents:subject);%(color:green)(%(committerdate:relative))%(color:blue);<%(authorname)>' | column -t -s ';'"
